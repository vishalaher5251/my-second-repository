<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getAllEmployeesDataFlow" doc:id="e09bcaf6-2f0a-4564-ba9e-af59e961fd3b" >
		<db:select doc:name="Select" doc:id="0ef57d06-6bd4-48c6-98eb-1308c2fadb1a" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from employees]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="a72ffa87-ead2-4952-af19-13c7e502417c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map {
	empNo: $.EMP_NO,
	name: $.FIRST_NAME ++ " " ++ $.LAST_NAME,
	birthDate: $.BIRTH_DATE as String {format: "dd/MMM/yyyy"},
	gender: $.GENDER,
	hireDate: $.HIRE_DATE as String {format: "dd/MMM/yyyy"},
	salary: $.SALARY as String {format: "#.00"} as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getEmployeeDataFlow" doc:id="ef58ed5c-e989-46e5-b80a-188b9b905d1f">
		<db:query-single doc:name="Query single" doc:id="8fca3902-a47b-4fa3-9846-6252684de100" config-ref="Database_Config">
			<db:sql><![CDATA[select * from employees where emp_no = :no]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="9d3afb1a-9845-4f10-b636-af87f3af21a1">
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="9ce2abec-855a-480a-92b7-a43753246d5c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	empNo: payload.EMP_NO,
	name: payload.FIRST_NAME ++ " " ++ payload.LAST_NAME,
	birthDate: payload.BIRTH_DATE as String {format: "dd/MMM/yyyy"},
	gender: payload.GENDER,
	hireDate: payload.HIRE_DATE as String {format: "dd/MMM/yyyy"},
	salary: payload.SALARY as String {format: "#.00"} as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Transform Message" doc:id="7dccbbc6-210e-41c9-a2b6-ef5d2e5959d2">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee with given empId not found"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="d82905f9-62da-4aa3-a5fe-55f6af850515" variableName="httpStatus" />
			</otherwise>
		</choice>
	</flow>
	<flow name="deleteEmployeeDataFlow" doc:id="f24519c1-96e2-4299-81d4-53c8f3b913b9">
		<db:delete doc:name="Delete" doc:id="6f208aab-af11-4179-a106-2d67a116e933" config-ref="Database_Config">
			<db:sql><![CDATA[delete from employees where emp_no = :no]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="146fc43f-0fa5-4bea-9f61-04ecd2a34488">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data deleted for empNo: " ++ vars.empNo
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<sub-flow name="variableSub_Flow" doc:id="6f43b1ba-871f-4bec-b8f5-506d1fd25919" >
		<set-variable value="#[upper(payload.name.firstName)]" doc:name="firstName" doc:id="52f70c97-54c9-4183-8901-945b63449f27" variableName="firstName"/>
		<set-variable value="#[upper(payload.name.lastName)]" doc:name="lastName" doc:id="ddd9c12b-bd50-4d17-89e0-803998873761" variableName="lastName"/>
		<set-variable value='#[payload.birthDate as Date {format: "dd/MMM/yyyy"} as String {format: "yyyy-MM-dd"} default null]' doc:name="birthDate" doc:id="2827fcf6-dd34-4602-a4e5-88d366f5af27" variableName="birthDate"/>
		<set-variable value="#[payload.gender]" doc:name="gender" doc:id="22dfd80b-157a-443b-a86b-00dd8fe0c427" variableName="gender"/>
		<set-variable value='#[payload.hireDate as Date {format: "dd/MMM/yyyy"} as String {format: "yyyy-MM-dd"} default null]' doc:name="hireDate" doc:id="3d0ed3ff-b9fe-4e4f-8201-e360a61311d4" variableName="hireDate"/>
		<set-variable value="#[payload.salary]" doc:name="salary" doc:id="28d683a5-76cb-4544-a093-921c31602d63" variableName="salary"/>
	</sub-flow>
	<sub-flow name="validationSub_Flow" doc:id="96b7290f-b0f6-4641-a802-b638cb48f4c3">
		<validation:matches-regex doc:name="Matches regex - birthDate" doc:id="34f42708-5fa8-410e-910a-f1c323c2c901" value="#[payload.birthDate]" regex="^[0-9]{2}/[A-Z]{1}[a-z]{2}/[0-9]{4}$" message="Enter birthdate in valid format" />
		<validation:is-not-blank-string doc:name="Is not blank string - firstName" doc:id="ef48021d-981a-4bb9-8263-08285e2b71cd" value="#[payload.name.firstName]" message="First name cannot be blank" />
		<validation:is-not-blank-string doc:name="Is not blank string - lastName" doc:id="9eda4b9f-5181-46b8-a163-04de5a00f29b" value="#[payload.name.lastName]" message="Last name cannot be blank" />
	</sub-flow>
	<sub-flow name="patchValidationSubFlow" doc:id="c8679847-4948-468a-95e3-ac998723148c">
		<validation:matches-regex doc:name="Matches regex - birthDate" doc:id="5fba9888-c2ea-4e53-9bc3-2a91323eaff6" value='#[vars.birthDate default payload.BIRTH_DATE as String {format: "yyyy-MM-dd"}]' regex="^[0-9]{4}-[0-9]{2}-[0-9]{2}$" message="Enter birthdate in valid format" />
		<validation:is-not-blank-string doc:name="Is not blank string - firstName" doc:id="a2e4a891-277e-4cc5-98a5-3317ff5b0140" value="#[vars.firstName default payload.FIRST_NAME]" message="First name cannot be blank" />
		<validation:is-not-blank-string doc:name="Is not blank string - lastName" doc:id="05725bae-cc11-4d2d-917c-aeb85e0d35c1" value="#[vars.lastName default payload.LAST_NAME]" message="Last name cannot be blank" />
	</sub-flow>
	<flow name="postEmployeeDataFlow" doc:id="19ebe6bb-4543-4b53-909d-5c524c52f7cc" >
		<flow-ref doc:name="validationSub_Flow" doc:id="ca4bd48c-25a0-4427-bd48-cf67900690e8" name="validationSub_Flow" />
		<flow-ref doc:name="variableSub_Flow" doc:id="266b41db-c657-431e-856a-fed4a4d8d958" name="variableSub_Flow"/>
		<db:query-single doc:name="Query single" doc:id="3f5bb6d9-ce80-4366-ba3e-3fa79ce9e74a" config-ref="Database_Config">
			<db:sql ><![CDATA[select max(emp_no) from employees]]></db:sql>
		</db:query-single>
		<set-variable value='#["E" ++ (payload."max(emp_no)"[1 to 3] as Number)+1]' doc:name="eNo" doc:id="ccce5fa4-9309-43eb-86c4-72ba0e562557" variableName="eNo"/>
		<db:insert doc:name="Insert" doc:id="d0f7a662-6083-4226-b853-58373fbb798f" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into employees values(:eNo, :fName, :lName, :bDate, :g, :hDate, :s)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	eNo: vars.eNo,
	fName: vars.firstName,
	lName: vars.lastName,
	bDate: vars.birthDate,
	g: vars.gender,
	hDate: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
		</db:insert>
		<choice doc:name="Choice" doc:id="80f09ff4-df1c-42d3-813c-faa27d354d0a" >
			<when expression="#[payload.affectedRows==1]">
				<db:query-single doc:name="Query single" doc:id="a0ccea8e-b598-4669-9e58-03bc1b94197e" config-ref="Database_Config">
			<db:sql><![CDATA[select max(emp_no) from employees]]></db:sql>
		</db:query-single>
				<ee:transform doc:name="Transform Message" doc:id="9d3fcb46-bd54-48a1-8c53-95281409c3a6">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data with empNo: " ++ payload."max(emp_no)" ++ " added to database"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="e9a52e62-7f4a-47f2-bada-6b0137500a74" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data is not inserted"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="163a2d33-193d-4fb2-a4e7-e7f2f010b143" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="putEmployeeDataFlow" doc:id="18e0eef1-c183-47e9-adc0-a92d8ba608bf" >
		<flow-ref doc:name="variableSub_Flow" doc:id="270f693f-b563-4eea-b48b-256191048e10" name="variableSub_Flow"/>
		<flow-ref doc:name="validationSub_Flow" doc:id="dab2241a-dd5b-4231-8bd3-e04a403f56e4" name="validationSub_Flow" />
		<db:query-single doc:name="Query single" doc:id="89aa3a3e-35f4-4c0c-a11d-36139c03cfc5" config-ref="Database_Config" >
			<db:sql ><![CDATA[select * from employees where emp_no = :no]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="6970c380-bc73-497b-a3de-168c16e2dd45" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<flow-ref doc:name="putUpdateSub_Flow" doc:id="51bad9ae-64f4-4646-8e03-88ec0f63596f" name="putUpdateSub_Flow"/>
			</when>
			<otherwise>
				<flow-ref doc:name="putInsertSub_Flow" doc:id="110bf657-f2e0-4060-9bc1-dd37a71a99fd" name="putInsertSub_Flow"/>
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="putUpdateSub_Flow" doc:id="a6eb746c-c406-436f-b6e9-8d55f817a648" >
		<db:update doc:name="Update" doc:id="551823a1-a8c4-4391-aa47-b6b5ce6e48d5" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set first_name = :fN, last_name = :lN, birth_date = :bD, gender = :g, hire_date = :hD, salary = :s where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	fN: vars.firstName,
	lN: vars.lastName,
	bD: vars.birthDate,
	g: vars.gender,
	hD: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
				</db:update>
		<choice doc:name="Choice" doc:id="b388ff1f-720e-4692-9dad-71fcbaf8bd0d" >
			<when expression="#[payload.affectedRows==1]" >
				<ee:transform doc:name="Transform Message" doc:id="44c92a23-7609-4d76-b9a9-23160a852556" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " has been updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="c1e0836f-681e-40f8-bbdd-128ae0d15662" variableName="httpStatus" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="d6685b5c-2ede-49c8-bf82-78e8e14cb4aa" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data not updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="eb80ac3e-8b4d-418d-aa16-83ad05cfe7d4" variableName="httpStatus" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="putInsertSub_Flow" doc:id="f0bc388f-48b0-4c78-b1b7-6407031c6a47" >
		<db:insert doc:name="Insert" doc:id="380e71cc-f121-4c76-8757-0349936e162a" config-ref="Database_Config">
					<db:sql><![CDATA[insert into employees values(:eNo, :fName, :lName, :bDate, :g, :hDate, :s)]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	fName: vars.firstName,
	lName: vars.lastName,
	bDate: vars.birthDate,
	g: vars.gender,
	hDate: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
				</db:insert>
		<choice doc:name="Choice" doc:id="1434a97f-605e-4962-9944-97c37c2c56f6" >
			<when expression="#[payload.affectedRows==1]">
				<ee:transform doc:name="Transform Message" doc:id="0260d62a-e221-44c3-ab7f-aa07b1849df5">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " is created in database"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="201" doc:name="httpStatus" doc:id="797b2031-cbba-41c1-af61-01e98fae9e03" variableName="httpStatus" />
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="8dd8ba1d-b9b1-4882-b127-f5108e869470">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data not updated/inserted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="b852367a-9203-4c79-bcc3-f8d78889d906" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="patchEmployeesDataSimplerFlow" doc:id="6d579a5d-34e7-494f-85ab-d65ab194a6d0" >
		<flow-ref doc:name="variableSub_Flow" doc:id="6ba58637-757e-4467-8bc6-77289f7a839a" name="variableSub_Flow"/>
		<db:query-single doc:name="Query single - Enables to update any value" doc:id="73768136-606b-41a1-b13b-4ed243de72e6" config-ref="Database_Config" >
			<db:sql ><![CDATA[select * from employees where emp_no = :no]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:query-single>
		<flow-ref doc:name="patchValidationSubFlow" doc:id="6deda8c8-9fbf-4d7e-a4ab-9c279b2d1acd" name="patchValidationSubFlow" />
		<db:update doc:name="Update" doc:id="c5ee00e4-4a7f-4b19-8f24-28ac723e72fd" config-ref="Database_Config">
			<db:sql><![CDATA[update employees set first_name = :fN, last_name = :lN, birth_date = :bD, gender = :g, hire_date = :hD, salary = :s where emp_no = :eNo]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	fN: vars.firstName default payload.FIRST_NAME,
	lN: vars.lastName default payload.LAST_NAME,
	bD: vars.birthDate default payload.BIRTH_DATE,
	g: vars.gender default payload.GENDER,
	hD: vars.hireDate default payload.HIRE_DATE,
	s: vars.salary default payload.SALARY
}]]]></db:input-parameters>
		</db:update>
		<choice doc:name="Choice" doc:id="301f7c79-e20b-41f4-a97e-00872b67238d" >
			<when expression="#[payload.affectedRows==1]" >
				<ee:transform doc:name="Transform Message" doc:id="95ec9aa5-70db-40cc-80d8-814e45d603ec" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " has been updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="d16ab404-2ba3-4a44-97fd-fb399b69e571" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data not updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="8a668b01-5bda-4233-8a03-0f09f5e79709" variableName="httpStatus" />
			</otherwise>
		</choice>
	</flow>
</mule>
