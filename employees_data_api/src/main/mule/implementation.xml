<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getAllEmployeesDataFlow" doc:id="e09bcaf6-2f0a-4564-ba9e-af59e961fd3b" >
		<db:select doc:name="Select" doc:id="0ef57d06-6bd4-48c6-98eb-1308c2fadb1a" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from employees]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="a72ffa87-ead2-4952-af19-13c7e502417c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map {
	empNo: $.EMP_NO,
	name: $.FIRST_NAME ++ " " ++ $.LAST_NAME,
	birthDate: $.BIRTH_DATE as String {format: "dd/MMM/yyyy"},
	gender: $.GENDER,
	hireDate: $.HIRE_DATE as String {format: "dd/MMM/yyyy"},
	salary: $.SALARY as String {format: "#.00"} as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getEmployeeDataFlow" doc:id="ef58ed5c-e989-46e5-b80a-188b9b905d1f" >
		<db:query-single doc:name="Query single" doc:id="8fca3902-a47b-4fa3-9846-6252684de100" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from employees where emp_no = :no]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="9d3afb1a-9845-4f10-b636-af87f3af21a1" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="9ce2abec-855a-480a-92b7-a43753246d5c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	empNo: payload.EMP_NO,
	name: payload.FIRST_NAME ++ " " ++ payload.LAST_NAME,
	birthDate: payload.BIRTH_DATE as String {format: "dd/MMM/yyyy"},
	gender: payload.GENDER,
	hireDate: payload.HIRE_DATE as String {format: "dd/MMM/yyyy"},
	salary: payload.SALARY as String {format: "#.00"} as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="7dccbbc6-210e-41c9-a2b6-ef5d2e5959d2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee with given empId not found"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="d82905f9-62da-4aa3-a5fe-55f6af850515" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="deleteEmployeeDataFlow" doc:id="f24519c1-96e2-4299-81d4-53c8f3b913b9" >
		<db:delete doc:name="Delete" doc:id="6f208aab-af11-4179-a106-2d67a116e933" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from employees where emp_no = :no]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="146fc43f-0fa5-4bea-9f61-04ecd2a34488" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data deleted for empNo: " ++ vars.empNo
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<sub-flow name="variableSub_Flow" doc:id="6f43b1ba-871f-4bec-b8f5-506d1fd25919" >
		<set-variable value="#[upper(payload.name.firstName)]" doc:name="firstName" doc:id="52f70c97-54c9-4183-8901-945b63449f27" variableName="firstName"/>
		<set-variable value="#[upper(payload.name.lastName)]" doc:name="lastName" doc:id="ddd9c12b-bd50-4d17-89e0-803998873761" variableName="lastName"/>
		<set-variable value='#[payload.birthDate as Date {format: "dd/MMM/yyyy"} as String {format: "yyyy-MM-dd"} default null]' doc:name="birthDate" doc:id="2827fcf6-dd34-4602-a4e5-88d366f5af27" variableName="birthDate"/>
		<set-variable value="#[payload.gender]" doc:name="gender" doc:id="22dfd80b-157a-443b-a86b-00dd8fe0c427" variableName="gender"/>
		<set-variable value='#[payload.hireDate as Date {format: "dd/MMM/yyyy"} as String {format: "yyyy-MM-dd"} default null]' doc:name="hireDate" doc:id="3d0ed3ff-b9fe-4e4f-8201-e360a61311d4" variableName="hireDate"/>
		<set-variable value="#[payload.salary]" doc:name="salary" doc:id="28d683a5-76cb-4544-a093-921c31602d63" variableName="salary"/>
	</sub-flow>
	<sub-flow name="validationSub_Flow" doc:id="96b7290f-b0f6-4641-a802-b638cb48f4c3" >
		<validation:matches-regex doc:name="Matches regex - birthDate" doc:id="34f42708-5fa8-410e-910a-f1c323c2c901" value="#[payload.birthDate]" regex="^[0-9]{2}/[A-Z]{1}[a-z]{2}/[0-9]{4}$" message="Enter birthdate in valid format"/>
		<validation:is-not-blank-string doc:name="Is not blank string - firstName" doc:id="ef48021d-981a-4bb9-8263-08285e2b71cd" value="#[payload.name.firstName]" message="First name cannot be blank" />
		<validation:is-not-blank-string doc:name="Is not blank string - lastName" doc:id="9eda4b9f-5181-46b8-a163-04de5a00f29b" value="#[payload.name.lastName]" message="Last name cannot be blank" />
	</sub-flow>
	<flow name="postEmployeeDataFlow" doc:id="19ebe6bb-4543-4b53-909d-5c524c52f7cc" >
		<flow-ref doc:name="validationSub_Flow" doc:id="ca4bd48c-25a0-4427-bd48-cf67900690e8" name="validationSub_Flow" />
		<flow-ref doc:name="variableSub_Flow" doc:id="266b41db-c657-431e-856a-fed4a4d8d958" name="variableSub_Flow"/>
		<db:query-single doc:name="Query single" doc:id="3f5bb6d9-ce80-4366-ba3e-3fa79ce9e74a" config-ref="Database_Config">
			<db:sql ><![CDATA[select max(emp_no) from employees]]></db:sql>
		</db:query-single>
		<set-variable value='#["E" ++ (payload."max(emp_no)"[1 to 3] as Number)+1]' doc:name="eNo" doc:id="ccce5fa4-9309-43eb-86c4-72ba0e562557" variableName="eNo"/>
		<db:insert doc:name="Insert" doc:id="d0f7a662-6083-4226-b853-58373fbb798f" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into employees values(:eNo, :fName, :lName, :bDate, :g, :hDate, :s)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	eNo: vars.eNo,
	fName: vars.firstName,
	lName: vars.lastName,
	bDate: vars.birthDate,
	g: vars.gender,
	hDate: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
		</db:insert>
		<choice doc:name="Choice" doc:id="80f09ff4-df1c-42d3-813c-faa27d354d0a" >
			<when expression="#[payload.affectedRows==1]">
				<db:query-single doc:name="Query single" doc:id="a0ccea8e-b598-4669-9e58-03bc1b94197e" config-ref="Database_Config">
			<db:sql><![CDATA[select max(emp_no) from employees]]></db:sql>
		</db:query-single>
				<ee:transform doc:name="Transform Message" doc:id="9d3fcb46-bd54-48a1-8c53-95281409c3a6">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data with empNo: " ++ payload."max(emp_no)" ++ " added to database"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="e9a52e62-7f4a-47f2-bada-6b0137500a74" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data is not inserted"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="163a2d33-193d-4fb2-a4e7-e7f2f010b143" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="putEmployeeDataFlow" doc:id="18e0eef1-c183-47e9-adc0-a92d8ba608bf" >
		<flow-ref doc:name="variableSub_Flow" doc:id="270f693f-b563-4eea-b48b-256191048e10" name="variableSub_Flow"/>
		<flow-ref doc:name="validationSub_Flow" doc:id="dab2241a-dd5b-4231-8bd3-e04a403f56e4" name="validationSub_Flow" />
		<db:query-single doc:name="Query single" doc:id="89aa3a3e-35f4-4c0c-a11d-36139c03cfc5" config-ref="Database_Config" >
			<db:sql ><![CDATA[select * from employees where emp_no = :no]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	no: vars.empNo
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="6970c380-bc73-497b-a3de-168c16e2dd45" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<db:update doc:name="Update" doc:id="551823a1-a8c4-4391-aa47-b6b5ce6e48d5" config-ref="Database_Config">
					<db:sql ><![CDATA[update employees set first_name = :fN, last_name = :lN, birth_date = :bD, gender = :g, hire_date = :hD, salary = :s where emp_no = :eNo]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	eNo: vars.empNo,
	fN: vars.firstName,
	lN: vars.lastName,
	bD: vars.birthDate,
	g: vars.gender,
	hD: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
				</db:update>
				<ee:transform doc:name="Transform Message" doc:id="a9040d86-67a2-411c-8cd9-e7bf99235391" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " has been updated in database"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="c1e0836f-681e-40f8-bbdd-128ae0d15662" variableName="httpStatus"/>
			</when>
			<otherwise >
				<db:insert doc:name="Insert" doc:id="380e71cc-f121-4c76-8757-0349936e162a" config-ref="Database_Config" >
					<db:sql ><![CDATA[insert into employees values(:eNo, :fName, :lName, :bDate, :g, :hDate, :s)]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	eNo: vars.empNo,
	fName: vars.firstName,
	lName: vars.lastName,
	bDate: vars.birthDate,
	g: vars.gender,
	hDate: vars.hireDate,
	s: vars.salary
}]]]></db:input-parameters>
				</db:insert>
				<ee:transform doc:name="Transform Message" doc:id="0260d62a-e221-44c3-ab7f-aa07b1849df5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " is created in database"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="201" doc:name="httpStatus" doc:id="797b2031-cbba-41c1-af61-01e98fae9e03" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="patchEmployeeDataFlow" doc:id="3b4e5291-314d-4a32-881c-0c119bdb4e84">
		<flow-ref doc:name="variableSub_Flow" doc:id="1e4ab290-4ad8-4bdd-9532-7fcc65cc1f7a" name="variableSub_Flow" />
		<flow-ref doc:name="patchFlow1" doc:id="180cef9c-185b-4a08-ba90-72cc95f7ddbf" name="patchFlow1" />
		<flow-ref doc:name="patchFlow2" doc:id="d1c8b295-c6dd-4935-bb83-4b659e22b365" name="patchFlow2" />
		<choice doc:name="Choice" doc:id="0521944c-dbd4-4bd1-aff7-b7cc94143423" >
			<when expression="#[payload.affectedRows==1]">
				<ee:transform doc:name="Transform Message" doc:id="808314f9-0415-401b-871a-390af26a2584">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data for empNo: " ++ vars.empNo ++ " has been updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="5c99fb96-e4c4-485e-a8ae-340f4a0efe2d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Employee data not updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="500" doc:name="httpStatus" doc:id="9ce816be-07b5-4f3e-bfb9-f6ec4dae9f6c" variableName="httpStatus"/>
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="patchFlow1" doc:id="8a6debed-d2c6-41f7-bd5b-38e8e867683d">
		<choice doc:name="Choice" doc:id="b854f0f4-e040-42d3-b9eb-d73a848bccfa">
			<when expression="#[vars.firstName != null]">
				<validation:is-not-blank-string doc:name="Is not blank string - firstName" doc:id="b9010728-8380-431d-9b64-3c84aa97a770" value="#[vars.firstName]" message="First name cannot be blank" />
				<db:update doc:name="Update FirstName" doc:id="f2099eab-bf7d-40e3-825b-bb47a7452468" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set first_name = :fN where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	fN: vars.firstName
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="aa6e15bd-ddd9-49ca-84fb-3d5177d3dac1">
			<when expression="#[vars.lastName != null]">
				<validation:is-not-blank-string doc:name="Is not blank string - lastName" doc:id="516c2b34-752d-437f-898b-8d0b1c27df10" value="#[vars.lastName]" message="Last name cannot be blank" />
				<db:update doc:name="Update lastName" doc:id="bb957eb4-c7f1-462a-8672-454011a05279" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set last_name = :lN where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	lN: vars.lastName
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="60ec4183-96ad-42a6-92d7-7ee7b2b2b001">
			<when expression="#[vars.birthDate != null]">
				<validation:matches-regex doc:name="Matches regex - birthDate" doc:id="4142c6b4-9ead-42f9-aa33-562b06c4c422" value="#[vars.birthDate]" regex="^[0-9]{4}-[0-9]{2}-[0-9]{2}$" message="Enter birthdate in valid format" />
				<db:update doc:name="Update birthDate" doc:id="7f1601b7-d2b9-4a55-b5a4-d81d88765171" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set birth_date = :bD where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	bD: vars.birthDate
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="patchFlow2" doc:id="fac620f9-b471-4150-a6f0-6c592fe22f86">
		<choice doc:name="Choice" doc:id="7718390d-0777-488d-9b71-490fade1922e">
			<when expression="#[vars.gender != null]">
				<db:update doc:name="Update gender" doc:id="90a34719-67b3-44ef-913f-7ff82947f486" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set gender = :g where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	g: vars.gender
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="2476c147-0966-49e0-a203-03881bdf2061">
			<when expression="#[vars.hireDate != null]">
				<db:update doc:name="Update hireDate" doc:id="19e7b28b-5f12-4b8a-8d88-e0c24155ea02" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set hire_date = :hD where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	hD: vars.hireDate
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="ed326d1d-eec1-4ce5-b6b3-c2a0519df2a4">
			<when expression="#[vars.salary != null]">
				<db:update doc:name="Update salary" doc:id="a6b5ae78-3454-4257-b2cb-32bcc82be3da" config-ref="Database_Config">
					<db:sql><![CDATA[update employees set salary = :s where emp_no = :eNo]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	eNo: vars.empNo,
	s: vars.salary
}]]]></db:input-parameters>
				</db:update>
			</when>
		</choice>
	</sub-flow>
</mule>
